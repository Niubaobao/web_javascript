// ***假设，你花了点时间，练习了二叉树的三种遍历方式： a. 前序遍历 b. 中序遍历 c. 后续遍历
// ***你也学习了二叉搜索树，深入研究了二叉树搜索树的特性，并且深刻知道二叉搜索树的一个特性：通过中序遍历所得到的序列，就是有序的。

// 二叉树的三种遍历方法
// 先序遍历： 先访问根节点，然后访问左孩子，最后访问右孩子。

// 中序遍历： 先访问左孩点，然后访问根节点，最后访问右孩子。

// 后续遍历:  先访问左孩子，然后访问右孩子，最后访问根节点。


// 题目 ：给定一棵二叉搜索树，请找出其中第k大的节点。
// 输入: root = [3,1,4,null,2], k = 1
//    3
//   / \
//  1   4
//   \
//    2
// 输出: 4

// 限制：
// 1 ≤ k ≤ 二叉搜索树元素个数

var kthLargest = (root, k) => {
  let arr = [] 

  const loop = (root) => {
    if(root === null) return
    arr.push(root.val)
    loop(root.left)
    loop(root.right)
  }

  loop(root)
  return arr.sort((a, b) => b - a)[k-1]
}




